{
  "name": "vitest-evals",
  "version": "0.4.1",
  "sideEffects": false,
  "types": "./dist/index.d.ts",
  "main": "./dist/index.js",
  "module": "./dist/index.mjs",
  "files": ["dist"],
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "require": "./dist/index.js",
      "import": "./dist/index.mjs"
    },
    "./reporter": {
      "types": "./dist/reporter.d.ts",
      "require": "./dist/reporter.js",
      "import": "./dist/reporter.mjs"
    },
    "./scorers": {
      "types": "./dist/scorers/index.d.ts",
      "require": "./dist/scorers/index.js",
      "import": "./dist/scorers/index.mjs"
    },
    "./scorers/toolCallScorer": {
      "types": "./dist/scorers/toolCallScorer.d.ts",
      "require": "./dist/scorers/toolCallScorer.js",
      "import": "./dist/scorers/toolCallScorer.mjs"
    }
  },
  "scripts": {
    "build": "tsup",
    "format": "biome format --write",
    "lint": "biome lint",
    "lint:fix": "biome lint --fix",
    "prepare": "npm run build && simple-git-hooks",
    "test": "dotenv -e .env -e .env.local -- vitest --reporter=./src/reporter.ts",
    "test:ci": "dotenv -e .env -e .env.local -- vitest run --coverage --reporter=./src/reporter.ts --reporter=junit --outputFile=tests.junit.xml"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/getsentry/vitest-evals.git"
  },
  "author": "David Cramer",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/getsentry/vitest-evals/issues"
  },
  "homepage": "https://github.com/getsentry/vitest-evals#readme",
  "description": "",
  "peerDependencies": {
    "tinyrainbow": "*",
    "vitest": "*"
  },
  "devDependencies": {
    "@biomejs/biome": "^1.9.4",
    "@vitest/coverage-v8": "^3.1.1",
    "autoevals": "^0.0.127",
    "dotenv-cli": "^8.0.0",
    "lint-staged": "^15.5.0",
    "openai": "^4.97.0",
    "simple-git-hooks": "^2.12.1",
    "tinyrainbow": "*",
    "tsup": "^8.4.0",
    "typescript": "^5.8.3",
    "vitest": "*"
  },
  "simple-git-hooks": {
    "pre-commit": "npm exec lint-staged --concurrent false"
  },
  "lint-staged": {
    "*": [
      "biome format --write --no-errors-on-unmatched --files-ignore-unknown=true",
      "biome lint --fix --no-errors-on-unmatched --files-ignore-unknown=true"
    ]
  }
}
