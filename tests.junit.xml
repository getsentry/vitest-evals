<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="71" failures="0" errors="0" time="0.027476922">
    <testsuite name="src/ai-sdk-integration.test.ts" timestamp="2025-07-29T02:27:45.723Z" hostname="David-H5" tests="5" failures="0" errors="0" skipped="3" time="0.002075263">
        <testcase classname="src/ai-sdk-integration.test.ts" name="AI SDK Weather Assistant &gt; What&apos;s the weather like in Seattle?" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/ai-sdk-integration.test.ts" name="AI SDK Weather Assistant &gt; Compare the weather between Seattle and New York" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/ai-sdk-integration.test.ts" name="AI SDK Weather Assistant &gt; Tell me about the weather" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/ai-sdk-integration.test.ts" name="Tool Argument Validation &gt; What&apos;s the weather in Seattle in Celsius?" time="0.001109286">
        </testcase>
        <testcase classname="src/ai-sdk-integration.test.ts" name="Flexible Argument Matching &gt; Search for Italian restaurants nearby" time="0.000213714">
        </testcase>
    </testsuite>
    <testsuite name="src/autoevals-compatibility.test.ts" timestamp="2025-07-29T02:27:45.724Z" hostname="David-H5" tests="3" failures="0" errors="0" skipped="2" time="0.001866252">
        <testcase classname="src/autoevals-compatibility.test.ts" name="autoevals Levenshtein &gt; What is the capital of France?" time="0.000836826">
        </testcase>
        <testcase classname="src/autoevals-compatibility.test.ts" name="autoevals Factuality &gt; What is the capital of France?" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/autoevals-compatibility.test.ts" name="autoevals ClosedQA &gt; What is the capital of France?" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/formatScores.test.ts" timestamp="2025-07-29T02:27:45.725Z" hostname="David-H5" tests="3" failures="0" errors="0" skipped="0" time="0.007211847">
        <testcase classname="src/formatScores.test.ts" name="formatScores &gt; should format scores in descending order" time="0.005395616">
        </testcase>
        <testcase classname="src/formatScores.test.ts" name="formatScores &gt; should include rationale for scores less than 1.0" time="0.000578289">
        </testcase>
        <testcase classname="src/formatScores.test.ts" name="formatScores &gt; should handle null scores" time="0.00047986">
        </testcase>
    </testsuite>
    <testsuite name="src/wrapText.test.ts" timestamp="2025-07-29T02:27:45.725Z" hostname="David-H5" tests="6" failures="0" errors="0" skipped="0" time="0.00214169">
        <testcase classname="src/wrapText.test.ts" name="wrapText &gt; should return the original text if it&apos;s shorter than the width" time="0.000809772">
        </testcase>
        <testcase classname="src/wrapText.test.ts" name="wrapText &gt; should wrap text at word boundaries" time="0.000202484">
        </testcase>
        <testcase classname="src/wrapText.test.ts" name="wrapText &gt; should handle empty string" time="0.000068336">
        </testcase>
        <testcase classname="src/wrapText.test.ts" name="wrapText &gt; should handle null or undefined" time="0.000067856">
        </testcase>
        <testcase classname="src/wrapText.test.ts" name="wrapText &gt; should use default width of 80" time="0.000129794">
        </testcase>
        <testcase classname="src/wrapText.test.ts" name="wrapText &gt; should handle text with multiple spaces" time="0.000094873">
        </testcase>
    </testsuite>
    <testsuite name="src/scorers/structuredOutputScorer.test.ts" timestamp="2025-07-29T02:27:45.727Z" hostname="David-H5" tests="26" failures="0" errors="0" skipped="0" time="0.008624233">
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; basic functionality &gt; scores valid JSON output with all expected fields" time="0.001033084">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; basic functionality &gt; fails on invalid JSON" time="0.000216723">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; basic functionality &gt; accepts valid JSON when no expected fields specified" time="0.000098142">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; basic functionality &gt; fails when output contains error field" time="0.000089663">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; strict matching (default) &gt; requires exact matches for all fields" time="0.000162551">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; strict matching (default) &gt; handles nested objects strictly" time="0.000135744">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; strict matching (default) &gt; allows extra fields by default" time="0.000102934">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; fuzzy matching &gt; matches case-insensitive strings" time="0.000148233">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; fuzzy matching &gt; matches numbers with tolerance" time="0.000098132">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; fuzzy matching &gt; matches arrays regardless of order" time="0.000098277">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; fuzzy matching &gt; matches regex patterns" time="0.00010858">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; fuzzy matching &gt; allows type coercion" time="0.000076178">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; fuzzy matching &gt; matches nested objects with fuzzy rules" time="0.000101495">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; fuzzy matching &gt; supports function validators in fuzzy mode" time="0.000161161">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; fuzzy matching &gt; handles failing function validators in fuzzy mode" time="0.000164183">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; custom matching &gt; uses custom match function" time="0.000123401">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; custom matching &gt; custom function with validation" time="0.000128746">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; configuration options &gt; requireAll: false gives partial credit" time="0.000173628">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; configuration options &gt; allowExtras: false fails on extra fields" time="0.000112159">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; configuration options &gt; debug: true logs comparison details" time="0.001752261">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; edge cases &gt; handles undefined and null values" time="0.000185211">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; edge cases &gt; handles empty objects" time="0.000089846">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; edge cases &gt; handles arrays with objects" time="0.00012773">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; edge cases &gt; provides detailed mismatch information" time="0.000185209">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; integration with toEval &gt; works with toEval matcher" time="0.000291965">
        </testcase>
        <testcase classname="src/scorers/structuredOutputScorer.test.ts" name="StructuredOutputScorer &gt; integration with toEval &gt; works with partial credit" time="0.001453879">
        </testcase>
    </testsuite>
    <testsuite name="src/scorers/toolCallScorer.test.ts" timestamp="2025-07-29T02:27:45.730Z" hostname="David-H5" tests="28" failures="0" errors="0" skipped="0" time="0.005557637">
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; unordered tools (default) &gt; passes when all expected tools are called" time="0.001041637">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; unordered tools (default) &gt; fails when missing required tools" time="0.000144557">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; unordered tools (default) &gt; passes with extra tools when allowed (default)" time="0.000183479">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; unordered tools (default) &gt; fails with extra tools when not allowed" time="0.000131954">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; unordered tools (default) &gt; partial credit when requireAll is false" time="0.000145497">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; ordered tools &gt; fails when order is wrong" time="0.000214319">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; ordered tools &gt; passes when exact order matches" time="0.000097259">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; ordered tools &gt; handles extra tools in ordered mode" time="0.00012163">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; ordered tools &gt; partial credit in ordered mode when requireAll is false" time="0.000143338">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; argument matching &gt; fuzzy matching when specified" time="0.000161184">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; argument matching &gt; fuzzy matching with numbers" time="0.00016959">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; argument matching &gt; fuzzy matching with arrays" time="0.000126113">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; argument matching &gt; strict params require exact arguments" time="0.000195048">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; argument matching &gt; strict params pass with exact match" time="0.000091045">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; argument matching &gt; strict params ignore object key order" time="0.000123883">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; argument matching &gt; custom params matcher" time="0.000103601">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; argument matching &gt; detects wrong arguments" time="0.000155169">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; argument matching &gt; handles tools without arguments" time="0.00007446">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; edge cases &gt; handles empty expectations" time="0.000111912">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; edge cases &gt; handles no actual calls when expecting some" time="0.000102493">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; edge cases &gt; handles missing expectedTools" time="0.000073201">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; edge cases &gt; handles null/undefined matching" time="0.000111563">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; ordered with strict params &gt; validates arguments in ordered mode" time="0.000114475">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; complex scenarios &gt; handles duplicate tool calls correctly" time="0.000125335">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; complex scenarios &gt; handles multiple expected instances of same tool" time="0.0000709">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; complex scenarios &gt; fuzzy matching allows extra properties" time="0.000105218">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; complex scenarios &gt; strict matching with nested objects" time="0.000078006">
        </testcase>
        <testcase classname="src/scorers/toolCallScorer.test.ts" name="ToolCallScorer &gt; complex scenarios &gt; handles empty arrays and objects" time="0.00006989">
        </testcase>
    </testsuite>
</testsuites>
